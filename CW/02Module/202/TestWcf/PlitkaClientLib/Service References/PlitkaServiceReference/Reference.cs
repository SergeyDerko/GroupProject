//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;

namespace PlitkaClientLib.PlitkaServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PlitkaServiceReference.IPlitka")]
    public interface IPlitka {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlitka/GetCountTiles", ReplyAction="http://tempuri.org/IPlitka/GetCountTilesResponse")]
        int GetCountTiles(int heightWall, int widthWall, int heightTile, int widthTile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlitka/GetCountTiles", ReplyAction="http://tempuri.org/IPlitka/GetCountTilesResponse")]
        System.Threading.Tasks.Task<int> GetCountTilesAsync(int heightWall, int widthWall, int heightTile, int widthTile);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPlitkaChannel : PlitkaClientLib.PlitkaServiceReference.IPlitka, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlitkaClient : System.ServiceModel.ClientBase<PlitkaClientLib.PlitkaServiceReference.IPlitka>, PlitkaClientLib.PlitkaServiceReference.IPlitka {
        
        public PlitkaClient() {
        }
        
        public PlitkaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PlitkaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlitkaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlitkaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }

        public void GetCountTiles()
        {
            throw new NotImplementedException();
        }

        public int GetCountTiles(int heightWall, int widthWall, int heightTile, int widthTile) {
            return base.Channel.GetCountTiles(heightWall, widthWall, heightTile, widthTile);
        }
        
        public System.Threading.Tasks.Task<int> GetCountTilesAsync(int heightWall, int widthWall, int heightTile, int widthTile) {
            return base.Channel.GetCountTilesAsync(heightWall, widthWall, heightTile, widthTile);
        }
    }
}
