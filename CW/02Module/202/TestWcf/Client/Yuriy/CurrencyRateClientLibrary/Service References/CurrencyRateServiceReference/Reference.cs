//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CurrencyRateClientLibrary.CurrencyRateServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Currency", Namespace="http://schemas.datacontract.org/2004/07/CurrencyRateServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Currency : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PurchaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SaleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyDescription {
            get {
                return this.CurrencyDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyDescriptionField, value) != true)) {
                    this.CurrencyDescriptionField = value;
                    this.RaisePropertyChanged("CurrencyDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyName {
            get {
                return this.CurrencyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyNameField, value) != true)) {
                    this.CurrencyNameField = value;
                    this.RaisePropertyChanged("CurrencyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Purchase {
            get {
                return this.PurchaseField;
            }
            set {
                if ((this.PurchaseField.Equals(value) != true)) {
                    this.PurchaseField = value;
                    this.RaisePropertyChanged("Purchase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Sale {
            get {
                return this.SaleField;
            }
            set {
                if ((this.SaleField.Equals(value) != true)) {
                    this.SaleField = value;
                    this.RaisePropertyChanged("Sale");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CurrencyRateServiceReference.ICurrencyRate")]
    public interface ICurrencyRate {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrencyRate/CurrentRate", ReplyAction="http://tempuri.org/ICurrencyRate/CurrentRateResponse")]
        CurrencyRateClientLibrary.CurrencyRateServiceReference.Currency[] CurrentRate();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrencyRate/CurrentRate", ReplyAction="http://tempuri.org/ICurrencyRate/CurrentRateResponse")]
        System.Threading.Tasks.Task<CurrencyRateClientLibrary.CurrencyRateServiceReference.Currency[]> CurrentRateAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICurrencyRateChannel : CurrencyRateClientLibrary.CurrencyRateServiceReference.ICurrencyRate, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CurrencyRateClient : System.ServiceModel.ClientBase<CurrencyRateClientLibrary.CurrencyRateServiceReference.ICurrencyRate>, CurrencyRateClientLibrary.CurrencyRateServiceReference.ICurrencyRate {
        
        public CurrencyRateClient() {
        }
        
        public CurrencyRateClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CurrencyRateClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CurrencyRateClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CurrencyRateClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CurrencyRateClientLibrary.CurrencyRateServiceReference.Currency[] CurrentRate() {
            return base.Channel.CurrentRate();
        }
        
        public System.Threading.Tasks.Task<CurrencyRateClientLibrary.CurrencyRateServiceReference.Currency[]> CurrentRateAsync() {
            return base.Channel.CurrentRateAsync();
        }
    }
}
