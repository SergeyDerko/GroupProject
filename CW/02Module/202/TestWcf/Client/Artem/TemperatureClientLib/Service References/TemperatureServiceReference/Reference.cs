//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TemperatureClientLib.TemperatureServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TemperatureServiceReference.ITemperature")]
    public interface ITemperature {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemperature/Temp", ReplyAction="http://tempuri.org/ITemperature/TempResponse")]
        string Temp();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemperature/Temp", ReplyAction="http://tempuri.org/ITemperature/TempResponse")]
        System.Threading.Tasks.Task<string> TempAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITemperatureChannel : TemperatureClientLib.TemperatureServiceReference.ITemperature, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TemperatureClient : System.ServiceModel.ClientBase<TemperatureClientLib.TemperatureServiceReference.ITemperature>, TemperatureClientLib.TemperatureServiceReference.ITemperature {
        
        public TemperatureClient() {
        }
        
        public TemperatureClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TemperatureClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TemperatureClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TemperatureClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Temp() {
            return base.Channel.Temp();
        }
        
        public System.Threading.Tasks.Task<string> TempAsync() {
            return base.Channel.TempAsync();
        }
    }
}
