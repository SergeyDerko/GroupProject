using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace SecondOut.Demo
{
    class Outers
    {
        /* Определить, имеется ли у числовых переменыых x и y общий множитель.
         * Если имеется, то возвратить найменьший и найбольший множитель 
         * посредством параметров типа out. */
        // метод получает два значения (аргумента) для сравнения, а
        // модификаторы параметра out вернут найменьшие и найбольшие множители 
        public bool HasComFactor (int x, int y, out int least, out int greatest)
        {
            int i;
            int max = x < y ? x : y; // тринарный оператор, очень удобно для -
            bool first = true; // - опредиления из двух переменных найменьшего

            least = 1; // инициализируем входящие переменные
            greatest = 1; // -||-

            // Найти найменьший и найбольший общий множитель.
            for (i = 2; i <= max/2 + 1; i++) // цикл будет выполнятся 
            { // пока не будет значениe i > max/2 + 1
                if ( ((y % i) == 0) & ((x % i) == 0)) // значение i проверяется
                { // на нулевой остаток от x и y
                    if (first) 
                    {
                        least = i; // на первом же i подходящем по условию - 
                        first = false; // - (y % i) == 0) & ((x % i) == 0)
                    } // значение i будет присвоено переменной least (найменьший множитель)
                    greatest = i; //последние же i которое даст true по условию -
                } // - (y % i) == 0) & ((x % i) == 0) будет присвено greatest (найбольший множитель)
            }
            if (least != 1) // условие вернет булевому методу HasComFactor (true/false)
                { // для вывода результата
                    return true;
                }
            else
            {
                return false;
            }
        }
    }
}
